#if !canImport(ObjectiveC)
import XCTest

extension HTMLEscapeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HTMLEscapeTests = [
        ("testCorrectness", testCorrectness),
        ("testLongStringNoReplacements", testLongStringNoReplacements),
        ("testLongStringWithReplacements", testLongStringWithReplacements),
        ("testMediumStringNoReplacements", testMediumStringNoReplacements),
        ("testMediumStringWithOnlyReplacements", testMediumStringWithOnlyReplacements),
        ("testMediumStringWithReplacements", testMediumStringWithReplacements),
        ("testShortStringNoReplacements", testShortStringNoReplacements),
        ("testShortStringWithReplacements", testShortStringWithReplacements),
    ]
}

extension TemplateDataEncoderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TemplateDataEncoderTests = [
        ("testArray", testArray),
        ("testComplexEncodable", testComplexEncodable),
        ("testDateFormatterThreadSafety", testDateFormatterThreadSafety),
        ("testDictionary", testDictionary),
        ("testDouble", testDouble),
        ("testEncodable", testEncodable),
        ("testEncodeSuperCustomImplementation", testEncodeSuperCustomImplementation),
        ("testEncodeSuperCustomImplementationWithSuperEncoder1", testEncodeSuperCustomImplementationWithSuperEncoder1),
        ("testEncodeSuperCustomImplementationWithSuperEncoder2", testEncodeSuperCustomImplementationWithSuperEncoder2),
        ("testEncodeSuperDefaultImplementation", testEncodeSuperDefaultImplementation),
        ("testEncodingPerformanceExampleModel", testEncodingPerformanceExampleModel),
        ("testEncodingPerformanceExampleModelJSONBaseline", testEncodingPerformanceExampleModelJSONBaseline),
        ("testGH10", testGH10),
        ("testGH20", testGH20),
        ("testISO8601DateFormat", testISO8601DateFormat),
        ("testNestedArray", testNestedArray),
        ("testNestedDictionary", testNestedDictionary),
        ("testNestedEncodable", testNestedEncodable),
        ("testString", testString),
        ("testTemplabeByteScannerPeak", testTemplabeByteScannerPeak),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(HTMLEscapeTests.__allTests__HTMLEscapeTests),
        testCase(TemplateDataEncoderTests.__allTests__TemplateDataEncoderTests),
    ]
}
#endif
